'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
'
Namespace InforMarketing
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WEBServiceScoreSoap", [Namespace]:="http://www.informarketing.com/WebService/webscore")>  _
    Partial Public Class WEBServiceScore
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private getLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLogoutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getNotaScoreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLista_Dados_DataSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLista_Dados_String_XMLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLista_Dados_StringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.PesquisarWS.My.MySettings.Default.PesquisarWS_InforMarketing_WEBServiceScore
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event getLoginCompleted As getLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event getLogoutCompleted As getLogoutCompletedEventHandler
        
        '''<remarks/>
        Public Event getNotaScoreCompleted As getNotaScoreCompletedEventHandler
        
        '''<remarks/>
        Public Event getLista_Dados_DataSetCompleted As getLista_Dados_DataSetCompletedEventHandler
        
        '''<remarks/>
        Public Event getLista_Dados_String_XMLCompleted As getLista_Dados_String_XMLCompletedEventHandler
        
        '''<remarks/>
        Public Event getLista_Dados_StringCompleted As getLista_Dados_StringCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.informarketing.com/WebService/webscore/getLogin", RequestNamespace:="http://www.informarketing.com/WebService/webscore", ResponseNamespace:="http://www.informarketing.com/WebService/webscore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLogin(ByVal strLogin As String, ByVal strSenha As String, ByVal strDominio As String) As String
            Dim results() As Object = Me.Invoke("getLogin", New Object() {strLogin, strSenha, strDominio})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLoginAsync(ByVal strLogin As String, ByVal strSenha As String, ByVal strDominio As String)
            Me.getLoginAsync(strLogin, strSenha, strDominio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLoginAsync(ByVal strLogin As String, ByVal strSenha As String, ByVal strDominio As String, ByVal userState As Object)
            If (Me.getLoginOperationCompleted Is Nothing) Then
                Me.getLoginOperationCompleted = AddressOf Me.OngetLoginOperationCompleted
            End If
            Me.InvokeAsync("getLogin", New Object() {strLogin, strSenha, strDominio}, Me.getLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLoginCompleted(Me, New getLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.informarketing.com/WebService/webscore/getLogout", RequestNamespace:="http://www.informarketing.com/WebService/webscore", ResponseNamespace:="http://www.informarketing.com/WebService/webscore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLogout(ByVal strLogin As String, ByVal strCod_Autenticador As String) As Boolean
            Dim results() As Object = Me.Invoke("getLogout", New Object() {strLogin, strCod_Autenticador})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLogoutAsync(ByVal strLogin As String, ByVal strCod_Autenticador As String)
            Me.getLogoutAsync(strLogin, strCod_Autenticador, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLogoutAsync(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal userState As Object)
            If (Me.getLogoutOperationCompleted Is Nothing) Then
                Me.getLogoutOperationCompleted = AddressOf Me.OngetLogoutOperationCompleted
            End If
            Me.InvokeAsync("getLogout", New Object() {strLogin, strCod_Autenticador}, Me.getLogoutOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLogoutOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLogoutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLogoutCompleted(Me, New getLogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.informarketing.com/WebService/webscore/getNotaScore", RequestNamespace:="http://www.informarketing.com/WebService/webscore", ResponseNamespace:="http://www.informarketing.com/WebService/webscore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getNotaScore(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal strParamCPF As String) As String
            Dim results() As Object = Me.Invoke("getNotaScore", New Object() {strLogin, strCod_Autenticador, strParamCPF})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getNotaScoreAsync(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal strParamCPF As String)
            Me.getNotaScoreAsync(strLogin, strCod_Autenticador, strParamCPF, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getNotaScoreAsync(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal strParamCPF As String, ByVal userState As Object)
            If (Me.getNotaScoreOperationCompleted Is Nothing) Then
                Me.getNotaScoreOperationCompleted = AddressOf Me.OngetNotaScoreOperationCompleted
            End If
            Me.InvokeAsync("getNotaScore", New Object() {strLogin, strCod_Autenticador, strParamCPF}, Me.getNotaScoreOperationCompleted, userState)
        End Sub
        
        Private Sub OngetNotaScoreOperationCompleted(ByVal arg As Object)
            If (Not (Me.getNotaScoreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getNotaScoreCompleted(Me, New getNotaScoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.informarketing.com/WebService/webscore/getLista_Dados_DataSet", RequestNamespace:="http://www.informarketing.com/WebService/webscore", ResponseNamespace:="http://www.informarketing.com/WebService/webscore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLista_Dados_DataSet(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal strParamCPF As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getLista_Dados_DataSet", New Object() {strLogin, strCod_Autenticador, strParamCPF})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLista_Dados_DataSetAsync(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal strParamCPF As String)
            Me.getLista_Dados_DataSetAsync(strLogin, strCod_Autenticador, strParamCPF, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLista_Dados_DataSetAsync(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal strParamCPF As String, ByVal userState As Object)
            If (Me.getLista_Dados_DataSetOperationCompleted Is Nothing) Then
                Me.getLista_Dados_DataSetOperationCompleted = AddressOf Me.OngetLista_Dados_DataSetOperationCompleted
            End If
            Me.InvokeAsync("getLista_Dados_DataSet", New Object() {strLogin, strCod_Autenticador, strParamCPF}, Me.getLista_Dados_DataSetOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLista_Dados_DataSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLista_Dados_DataSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLista_Dados_DataSetCompleted(Me, New getLista_Dados_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.informarketing.com/WebService/webscore/getLista_Dados_String_XML", RequestNamespace:="http://www.informarketing.com/WebService/webscore", ResponseNamespace:="http://www.informarketing.com/WebService/webscore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLista_Dados_String_XML(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal strParamCPF As String) As String
            Dim results() As Object = Me.Invoke("getLista_Dados_String_XML", New Object() {strLogin, strCod_Autenticador, strParamCPF})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLista_Dados_String_XMLAsync(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal strParamCPF As String)
            Me.getLista_Dados_String_XMLAsync(strLogin, strCod_Autenticador, strParamCPF, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLista_Dados_String_XMLAsync(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal strParamCPF As String, ByVal userState As Object)
            If (Me.getLista_Dados_String_XMLOperationCompleted Is Nothing) Then
                Me.getLista_Dados_String_XMLOperationCompleted = AddressOf Me.OngetLista_Dados_String_XMLOperationCompleted
            End If
            Me.InvokeAsync("getLista_Dados_String_XML", New Object() {strLogin, strCod_Autenticador, strParamCPF}, Me.getLista_Dados_String_XMLOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLista_Dados_String_XMLOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLista_Dados_String_XMLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLista_Dados_String_XMLCompleted(Me, New getLista_Dados_String_XMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.informarketing.com/WebService/webscore/getLista_Dados_String", RequestNamespace:="http://www.informarketing.com/WebService/webscore", ResponseNamespace:="http://www.informarketing.com/WebService/webscore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLista_Dados_String(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal strParamCPF As String) As String
            Dim results() As Object = Me.Invoke("getLista_Dados_String", New Object() {strLogin, strCod_Autenticador, strParamCPF})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLista_Dados_StringAsync(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal strParamCPF As String)
            Me.getLista_Dados_StringAsync(strLogin, strCod_Autenticador, strParamCPF, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLista_Dados_StringAsync(ByVal strLogin As String, ByVal strCod_Autenticador As String, ByVal strParamCPF As String, ByVal userState As Object)
            If (Me.getLista_Dados_StringOperationCompleted Is Nothing) Then
                Me.getLista_Dados_StringOperationCompleted = AddressOf Me.OngetLista_Dados_StringOperationCompleted
            End If
            Me.InvokeAsync("getLista_Dados_String", New Object() {strLogin, strCod_Autenticador, strParamCPF}, Me.getLista_Dados_StringOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLista_Dados_StringOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLista_Dados_StringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLista_Dados_StringCompleted(Me, New getLista_Dados_StringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub getLoginCompletedEventHandler(ByVal sender As Object, ByVal e As getLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub getLogoutCompletedEventHandler(ByVal sender As Object, ByVal e As getLogoutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLogoutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub getNotaScoreCompletedEventHandler(ByVal sender As Object, ByVal e As getNotaScoreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getNotaScoreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub getLista_Dados_DataSetCompletedEventHandler(ByVal sender As Object, ByVal e As getLista_Dados_DataSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLista_Dados_DataSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub getLista_Dados_String_XMLCompletedEventHandler(ByVal sender As Object, ByVal e As getLista_Dados_String_XMLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLista_Dados_String_XMLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub getLista_Dados_StringCompletedEventHandler(ByVal sender As Object, ByVal e As getLista_Dados_StringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLista_Dados_StringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
